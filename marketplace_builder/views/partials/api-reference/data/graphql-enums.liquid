{% parse_json graphql_enums %}
{% raw %}
[
  {
    "notices": [],
    "name": "AggregationSortFieldEnum",
    "description": null,
    "values": [
      { "notices": [], "name": "_count", "description": "document count sort" },
      { "notices": [], "name": "_term", "description": "alpha sort" }
    ]
  },
  {
    "notices": [],
    "name": "AggregationSortOrderEnum",
    "description": null,
    "values": [{ "notices": [], "name": "asc", "description": "ascending" }, { "notices": [], "name": "desc", "description": "descending" }]
  },
  {
    "notices": [],
    "name": "AggregationTypeEnum",
    "description": null,
    "values": [
      {
        "notices": [],
        "name": "max",
        "description": "A single-value metrics aggregation that keeps track and returns the maximum\nvalue among the values extracted from the aggregated documents."
      },
      {
        "notices": [],
        "name": "min",
        "description": "A single-value metrics aggregation that keeps track and returns the minimum\nvalue among the values extracted from the aggregated documents."
      },
      {
        "notices": [],
        "name": "terms",
        "description": "A multi-bucket value source based aggregation where buckets are dynamically built - one per unique value."
      }
    ]
  },
  {
    "notices": [],
    "name": "AsyncCallbackPriority",
    "description": null,
    "values": [
      { "notices": [], "name": "default", "description": "default - max timeout: 5 minutes" },
      { "notices": [], "name": "high", "description": "high - max timeout: 1 minute" },
      { "notices": [], "name": "low", "description": "low - max timeout: 4 hours" }
    ]
  },
  {
    "notices": [],
    "name": "AuthenticationProvider",
    "description": "List of authentication providers",
    "values": [
      { "notices": [], "name": "facebook", "description": "facebook" },
      { "notices": [], "name": "github", "description": "github" },
      { "notices": [], "name": "google", "description": "google" },
      { "notices": [], "name": "instagram", "description": "instagram" },
      { "notices": [], "name": "linkedin", "description": "linkedin" },
      { "notices": [], "name": "openid_connect", "description": "openid_connect" },
      { "notices": [], "name": "saml", "description": "saml" },
      { "notices": [], "name": "twitter", "description": "twitter" }
    ]
  },
  {
    "notices": [],
    "name": "CMSItemType",
    "description": null,
    "values": [
      { "notices": [], "name": "ActivityStreamsGroupingHandler", "description": null },
      { "notices": [], "name": "ActivityStreamsHandler", "description": null },
      { "notices": [], "name": "ApiCallNotification", "description": null },
      { "notices": [], "name": "Asset", "description": null },
      { "notices": [], "name": "AuthorizationPolicy", "description": null },
      { "notices": [], "name": "CustomModelType", "description": null },
      { "notices": [], "name": "EmailNotification", "description": null },
      { "notices": [], "name": "FormConfiguration", "description": null },
      { "notices": [], "name": "GraphQuery", "description": null },
      { "notices": [], "name": "InstanceProfileType", "description": null },
      { "notices": [], "name": "LiquidView", "description": null },
      { "notices": [], "name": "Migration", "description": null },
      { "notices": [], "name": "Page", "description": null },
      { "notices": [], "name": "RelationshipTransactableType", "description": null },
      { "notices": [], "name": "RelationshipType", "description": null },
      { "notices": [], "name": "RelationshipUserType", "description": null },
      { "notices": [], "name": "SmsNotification", "description": null },
      { "notices": [], "name": "TransactableType", "description": null },
      { "notices": [], "name": "Translation", "description": null },
      { "notices": [], "name": "UserType", "description": null }
    ]
  },
  {
    "notices": [],
    "name": "CustomizableTypeEnum",
    "description": null,
    "values": [
      { "notices": [], "name": "Customization", "description": "Customization" },
      { "notices": [], "name": "Payment", "description": "Payment" },
      { "notices": [], "name": "Relationship", "description": "Relationship" },
      { "notices": [], "name": "Transactable", "description": "Transactable" },
      { "notices": [], "name": "User", "description": "User" },
      { "notices": [], "name": "UserProfile", "description": "UserProfile" }
    ]
  },
  {
    "notices": [],
    "name": "DistanceUnit",
    "description": null,
    "values": [
      { "notices": [], "name": "cm", "description": "Centimeters" },
      { "notices": [], "name": "km", "description": "Kilometers" },
      { "notices": [], "name": "m", "description": "Meters" },
      { "notices": [], "name": "mi", "description": "Miles" },
      { "notices": [], "name": "nmi", "description": "Nautical Miles" },
      { "notices": [], "name": "yd", "description": "Yards" }
    ]
  },
  {
    "notices": [],
    "name": "LogEntryType",
    "description": "List of available event types",
    "values": [
      { "notices": [], "name": "debug", "description": null },
      { "notices": [], "name": "error", "description": null },
      { "notices": [], "name": "info", "description": null }
    ]
  },
  {
    "notices": [],
    "name": "MerchantAccountState",
    "description": "List of states for merchant account",
    "values": [
      { "notices": [], "name": "failed", "description": "Failed merchant account" },
      { "notices": [], "name": "pending", "description": "Pending merchant account" },
      { "notices": [], "name": "verified", "description": "Verified merchant account" },
      { "notices": [], "name": "voided", "description": "Voided merchant account" }
    ]
  },
  {
    "notices": [],
    "name": "OperatorEnum",
    "description": null,
    "values": [
      { "notices": [], "name": "AND", "description": "all values should match" },
      { "notices": [], "name": "OR", "description": "any value should match" }
    ]
  },
  {
    "notices": [],
    "name": "OrderDirection",
    "description": "Order direction",
    "values": [{ "notices": [], "name": "ASC", "description": "Asc" }, { "notices": [], "name": "DESC", "description": "Desc" }]
  },
  {
    "notices": [],
    "name": "PageFormat",
    "description": null,
    "values": [
      { "notices": [], "name": "css", "description": "css" },
      { "notices": [], "name": "csv", "description": "csv" },
      { "notices": [], "name": "html", "description": "html" },
      { "notices": [], "name": "js", "description": "js" },
      { "notices": [], "name": "json", "description": "json" },
      { "notices": [], "name": "pdf", "description": "pdf" },
      { "notices": [], "name": "rss", "description": "rss" },
      { "notices": [], "name": "svg", "description": "svg" },
      { "notices": [], "name": "text", "description": "text" },
      { "notices": [], "name": "txt", "description": "txt" },
      { "notices": [], "name": "xml", "description": "xml" }
    ]
  },
  {
    "notices": [],
    "name": "PageHandler",
    "description": null,
    "values": [
      { "notices": [], "name": "liquid", "description": "liquid" },
      { "notices": [], "name": "markdown", "description": "markdown" }
    ]
  },
  {
    "notices": [],
    "name": "PageRedifectCode",
    "description": null,
    "values": [
      { "notices": [], "name": "MOVED_PERMANENTLY", "description": "301 Moved Permanently" },
      { "notices": [], "name": "MOVED_TEMPORARILY", "description": "302 Moved Temporarily" }
    ]
  },
  {
    "notices": [],
    "name": "PageRequestMethod",
    "description": null,
    "values": [
      { "notices": [], "name": "delete", "description": "delete" },
      { "notices": [], "name": "get", "description": "get" },
      { "notices": [], "name": "patch", "description": "patch" },
      { "notices": [], "name": "post", "description": "post" },
      { "notices": [], "name": "put", "description": "put" }
    ]
  },
  {
    "notices": [],
    "name": "PaymentGatewayMode",
    "description": "List modes of Payment Gateway",
    "values": [
      { "notices": [], "name": "live", "description": "Uses live account, all transactions are charged" },
      { "notices": [], "name": "test", "description": "Uses test account, no transactons are actually charged" }
    ]
  },
  {
    "notices": [],
    "name": "PaymentGatewayType",
    "description": "List of available types of Payment Gatweways",
    "values": [
      { "notices": [], "name": "BraintreeMarketplacePaymentGateway", "description": null },
      { "notices": [], "name": "BraintreePaymentGateway", "description": null },
      { "notices": [], "name": "ManualPaymentGateway", "description": null },
      { "notices": [], "name": "PaypalExpressChainPaymentGateway", "description": null },
      { "notices": [], "name": "PaypalExpressPaymentGateway", "description": null },
      { "notices": [], "name": "PaypalPaymentGateway", "description": null },
      { "notices": [], "name": "StripeConnectPaymentGateway", "description": null },
      { "notices": [], "name": "StripePaymentGateway", "description": null }
    ]
  },
  {
    "notices": [],
    "name": "PaymentMethodType",
    "description": "List of available types of Payment Methods",
    "values": [
      { "notices": [], "name": "ach", "description": null },
      { "notices": [], "name": "credit_card", "description": null },
      { "notices": [], "name": "express_checkout", "description": null },
      { "notices": [], "name": "free", "description": null },
      { "notices": [], "name": "manual", "description": null },
      { "notices": [], "name": "nonce", "description": null },
      { "notices": [], "name": "remote", "description": null }
    ]
  },
  {
    "notices": [],
    "name": "PaymentMode",
    "description": "List of available modes for Payment",
    "values": [{ "notices": [], "name": "live", "description": "Live mode" }, { "notices": [], "name": "test", "description": "Test mode" }]
  },
  {
    "notices": [],
    "name": "PaymentState",
    "description": "List of available states for Payment",
    "values": [
      { "notices": [], "name": "authorized", "description": "Authorized payment" },
      { "notices": [], "name": "failed", "description": "Failed payment" },
      { "notices": [], "name": "paid", "description": "Payment has been made" },
      { "notices": [], "name": "pending", "description": "Pending payment" },
      { "notices": [], "name": "refunded", "description": "Payment has been refunded" },
      { "notices": [], "name": "voided", "description": "Voided payment" }
    ]
  },
  {
    "notices": [],
    "name": "ProcessStrategy",
    "description": null,
    "values": [{ "notices": [], "name": "pdf", "description": "pdf - body should be html to be converted to pdf" }]
  },
  {
    "notices": [],
    "name": "PropertyTypeEnum",
    "description": null,
    "values": [
      { "notices": [], "name": "address", "description": "address" },
      {
        "notices": [],
        "name": "array",
        "description": "array of strings, will be deprecated in the future as current implementation prevents arrays of other types"
      },
      { "notices": [], "name": "binary", "description": "binary" },
      { "notices": [], "name": "boolean", "description": "boolean" },
      { "notices": [], "name": "date", "description": "date" },
      { "notices": [], "name": "datetime", "description": "datetime" },
      { "notices": [], "name": "decimal", "description": "decimal" },
      { "notices": [], "name": "file", "description": "file" },
      { "notices": [], "name": "float", "description": "float" },
      { "notices": [], "name": "geojson", "description": "geojson" },
      { "notices": [], "name": "integer", "description": "integer" },
      { "notices": [], "name": "photo", "description": "photo" },
      { "notices": [], "name": "string", "description": "string" },
      { "notices": [], "name": "text", "description": "deprecated, please use string" },
      { "notices": [], "name": "time", "description": "time" }
    ]
  },
  {
    "notices": [],
    "name": "QueryMatchTypeEnum",
    "description": "Match types for keyword",
    "values": [
      { "notices": [], "name": "CONTAINS", "description": "Match any characters on start and end *foo*" },
      { "notices": [], "name": "ENDS_WITH", "description": "Match any characters on start *foo" },
      { "notices": [], "name": "EXACT", "description": "Match whole words" },
      { "notices": [], "name": "STARTS_WITH", "description": "Match any characters on end foo*" }
    ]
  },
  {
    "notices": [],
    "name": "SortOrderEnum",
    "description": null,
    "values": [
      { "notices": [], "name": "ASC", "description": "for strings: `a,b,c`, for numbers: `1,2,3`" },
      { "notices": [], "name": "DESC", "description": "for strings: `z,x,y`, for numbers: `99,98,97`" }
    ]
  },
  {
    "notices": [],
    "name": "__DirectiveLocation",
    "description": "A Directive can be adjacent to many parts of the GraphQL language, a __DirectiveLocation describes one such possible adjacencies.",
    "values": [
      { "notices": [], "name": "QUERY", "description": "Location adjacent to a query operation." },
      { "notices": [], "name": "MUTATION", "description": "Location adjacent to a mutation operation." },
      { "notices": [], "name": "SUBSCRIPTION", "description": "Location adjacent to a subscription operation." },
      { "notices": [], "name": "FIELD", "description": "Location adjacent to a field." },
      { "notices": [], "name": "FRAGMENT_DEFINITION", "description": "Location adjacent to a fragment definition." },
      { "notices": [], "name": "FRAGMENT_SPREAD", "description": "Location adjacent to a fragment spread." },
      { "notices": [], "name": "INLINE_FRAGMENT", "description": "Location adjacent to an inline fragment." },
      { "notices": [], "name": "SCHEMA", "description": "Location adjacent to a schema definition." },
      { "notices": [], "name": "SCALAR", "description": "Location adjacent to a scalar definition." },
      { "notices": [], "name": "OBJECT", "description": "Location adjacent to an object type definition." },
      { "notices": [], "name": "FIELD_DEFINITION", "description": "Location adjacent to a field definition." },
      { "notices": [], "name": "ARGUMENT_DEFINITION", "description": "Location adjacent to an argument definition." },
      { "notices": [], "name": "INTERFACE", "description": "Location adjacent to an interface definition." },
      { "notices": [], "name": "UNION", "description": "Location adjacent to a union definition." },
      { "notices": [], "name": "ENUM", "description": "Location adjacent to an enum definition." },
      { "notices": [], "name": "ENUM_VALUE", "description": "Location adjacent to an enum value definition." },
      { "notices": [], "name": "INPUT_OBJECT", "description": "Location adjacent to an input object type definition." },
      { "notices": [], "name": "INPUT_FIELD_DEFINITION", "description": "Location adjacent to an input object field definition." }
    ]
  },
  {
    "notices": [],
    "name": "__TypeKind",
    "description": "An enum describing what kind of type a given `__Type` is.",
    "values": [
      { "notices": [], "name": "SCALAR", "description": "Indicates this type is a scalar." },
      { "notices": [], "name": "OBJECT", "description": "Indicates this type is an object. `fields` and `interfaces` are valid fields." },
      {
        "notices": [],
        "name": "INTERFACE",
        "description": "Indicates this type is an interface. `fields` and `possibleTypes` are valid fields."
      },
      { "notices": [], "name": "UNION", "description": "Indicates this type is a union. `possibleTypes` is a valid field." },
      { "notices": [], "name": "ENUM", "description": "Indicates this type is an enum. `enumValues` is a valid field." },
      { "notices": [], "name": "INPUT_OBJECT", "description": "Indicates this type is an input object. `inputFields` is a valid field." },
      { "notices": [], "name": "LIST", "description": "Indicates this type is a list. `ofType` is a valid field." },
      { "notices": [], "name": "NON_NULL", "description": "Indicates this type is a non-null. `ofType` is a valid field." }
    ]
  }
]
{% endraw %}
{% endparse_json %}

{% export graphql_enums, namespace: 'api_reference' %}
