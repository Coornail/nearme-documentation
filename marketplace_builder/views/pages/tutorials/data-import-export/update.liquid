---
converter: markdown
metadata:
  title: Data Update
  description: Detailed description of data update with examples.
slug: tutorials/data-import-export/update
searchable: true
---

This topic describes **data update** from existing data in instance.

Data to be updateed needs to be in JSON format witch is similar to use used in [data import](/tutorials/data-import-export/import).
Update is very similar to the `import`, the main difference from `import` tool is that update can only change exising data on instance. In order to use this tool you have to export data from instance, see [data export](/tutorials/data-import-export/import). Once you have data modify it with your own tools(still keeping right format) and update them to an instance.

## General information

- Before update, your model schemas need to be deployed.

- When updating data, the `id` fields must match objects that exisits in instance. Update tool will not create new objects, in order to do this use [data import tool](/tutorials/data-import-export/import).

- No data will be deleted, update will only change existings values.

- In order to clean value on property set the `null` value explicitly.


- Update will only do basic validations the existence of properties, and type validation. It doesn't check any of the validations defined on forms.

## Data Update with CLI

platformOS CLI provides the `marketplace-kit data update` command for updating data from a JSON file. It accepts one option:

- --path (short: -p): A path to a JSON data file to be updateed

Under the hood, the CLI uses the GraphQL update API that's described in the next section. However, using the CLI provides some major benefits:

- Uploading file from disk
- Leveraging the CLI's authentication mechanism (i.e. you don't need to manually send your authentication token)

### Input format

Input format is the same as for [data import](/tutorials/data-import-export/import)

### Example

To update the data from a file, simply run the following command in the terminal:

<pre class="command-line" data-user="user" data-host="host"><code class="language-bash">
marketplace-kit data update --path=data.json staging-instance
</code></pre>

## Data Update with GraphQL mutations

It is possible to update data using GraphQL mutations. This gives you more flexibility, and even allows you to create your own update tool as a website feature. Please remember to handle authentication properly.

There are two main mutations for updating [`update_users()`](/api-reference/graphql/mutations#update_users) and [`update_models()`](/api-reference/graphql/mutations#update_models). You can create a page that will update sent data.

```graphql
mutation update_data(
    $users: [UserImport!]!,
    $models: [CustomizationImport!]!
  ) {
  update_users(users: $users) { ids }
  update_models(models: $models) { ids }
}
```

{% raw %}
```liquid
---
slug: update_data
format: json
method: post
---
{% execute_query "update_data",
  users: context.params.users,
  models: context.params.models
%}

{{ g | json }}
```
{% endraw %}

<pre class="command-line" data-output="2-6" data-user="user" data-host="host"><code class="language-bash">
curl -d @transformed.json \
  -H "Content-Type: application/json" \
  -X POST https://example.com/update_data.json
</code></pre>

## Data Update with raw update API

Our CLI uses the HTTP API to update a data file. You can use it in your own tool.
Please note, that you need to provide your authentication token in the HTTP Authorization header of the request.

<pre class="command-line" data-output="2-6" data-user="user" data-host="host"><code class="language-bash">
curl -d @data.json \
  -H "Content-Type: application/json" \
  -H "Authorization: Token token=[YOUR API TOKEN]" \
  -X POST https://example.com/api/marketplace_builder/data_updates
</code></pre>

{% include 'alert/note', content: 'You can find your API Token in [Partner Portal](https://partners.platform-os.com/me) under "Access Key".' %}

{% include 'shared/questions_section' %}
