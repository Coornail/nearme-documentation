---
converter: markdown
metadata:
  title: Integrating Stripe
  description: This guide will help you configure a Stripe payment gateway.
slug: tutorials/payments/integrating-stripe
searchable: true
---

This guide will help you configure a Stripe payment gateway.

## Requirements
To follow this tutorial, you should be familiar with the Stripe API and the Stripe Dashboard. You also need to have access to the Partner Portal.
* [Updating Instance Configuration](/tutorials/partner-portal/updating-instance-configuration)
* [Stripe API Keys](https://stripe.com/docs/keys)

## Steps

Integrating and configuring a Stripe payment gateway is a 5-step process:

<div data-autosteps></div>

### Step 1: Install Payments and Stripe Modules in Partner Portal

1. Go to [modules marketplace](https://portal.apps.near-me.com/module_marketplace) and click on "Buy" (It's FREE) next to "PlatformOS Payments" and "PlatformOS Payments Stripe" modules.
2. Go to your Instance view and install both modules
3. In the installation process set up Stripe public and secret keys
4. Make sure enable_sms_and_api_workflow_alerts_on_staging in your instance configuration is set to true


Read the manual for [Payment Module](https://github.com/mdyd-dev/platformos-payments) and [Stripe Module](https://github.com/mdyd-dev/platformos-payments-stripe) in order to understand the basics.

### Step 2: Create minimal working payment example

On the page of your choice, use predefined `gateway_request_form` and configure it with your data:

```liquid
{% raw %}
{% assign gateway_name = 'stripe' %}
{% export gateway_name, namespace: "payments"  %}

{%- parse_json 'data' -%}
  {
    "email": "{{ context.current_user.email }}",
    "currency": "USD",
    "description": "Charge Example",
    "statement_descriptor": "Example 1.",
    "capture": "true",
    "amount": "500"
  }
{%- endparse_json -%}

{%- parse_json 'config' -%}
  {
    "button": "Pay Now",
    "request_type": "create_payment",
    "require_zip": "true"
  }
{%- endparse_json -%}

{%-
  include_form 'modules/payments/gateway_request_form',
  config: config,
  data: data
%}

{% endraw %}
```

Predefined `create_payment` template will be rendered on your page.

For more information read [create_payment request](https://github.com/mdyd-dev/platformos-payments-stripe#create_payment) documentation.


### Step 3: List Payments

To check the state of the payment, use predefined [`modules/payments/get_payments`](https://github.com/mdyd-dev/platformos-payments/blob/master/public/graph_queries/get_payments.graphql) query.

<div class="mt-4">
  <h4>List of last payments:</h4>
  {% query_graph "modules/payments/get_payments" %}

  <table class="table">
    <tr>
      <th>ID</th>
      <th>State</th>
      <th>Payer</th>
      <th>Amount</th>
      <th>Actions</th>
    </tr>
    {% for payment in g.payments.results  %}
      <tr>
        <td>{{ payment.id }}</td>
        <td>{{ payment.properties.state | capitalize }}</td>
        <td>{{ payment.user.name }}</td>
        <td>{{ payment.properties.amount_cents | pricify_cents }}</td>
        <td>{% include 'modules/payments/create_refund', payment: payment %}</td>
      </tr>
    {% endfor %}
  </table>
</div>
```

### Step 4. Other Payment Examples

You will find more payment examples in dedicated project:

- [Payment Examples Repository](https://github.com/mdyd-dev/platformos-payment-examples)
- [Payment Examples Page](https://payment-examples.staging.oregon.platform-os.com)

List of examples:
- Integrating Stripe payments - example presented in this article
- Stripe Elements	- explains how to integrate [Stripe Element Components](https://stripe.com/docs/stripe-js/elements/quickstart) with Payment Module
- Saving Account - goes through all the details of [Stripe Connect](https://stripe.com/docs/connect) integration
- Saving Customer - example of reusing saved customer credit cards for future payments

