---
converter: markdown
metadata:
  title: Module Templates
  description: Using templates to configure a Module
slug: tutorials/modules/templates
searchable: true
---

Templates provide a way of configuring Modules before they get deployed to one of the environments
For example, it is possible upon installing a module to specify Slug under which a page will be available after the module is installed.

This works both in sync and deploy mode.

## Markup

Markup is very simple, everything between `<%=` and `=%>` is interpteted as key to be found in template configuration file. There is no logic supported, only available filter is & which will unescape the value provided by the user (by default they are all escaped).


## Configuration

{% include "alert/note", content: "This section is work in progress, so it is likely to keep changing - we are adding support for template configuration file on toplevel of the module (separate configuration file per module)" %}

Values for variables have to be provided in toplevel "template-values.json" but the location of configuration file can be set using TEMPLATE_VALUES_FILE_PATH variable.


## Example

Having a page with this code:

``` liquid
---
slug: <%= &slug =%>
layout_name: "modules/contact_form/main"
---

<h1> <%= title =%> </h1>
```

And a toplevel `template-values.json` with:

``` json
{
  "slug": "/contact_form",
  "title": "Contact Page title"
}
```

During deploy or sync this will get filled in and send to the sever as:

```
---
slug: /contact_form
layout_name: "modules/contact_form/main"
---

<h1> Contact Page title </h1>
```
