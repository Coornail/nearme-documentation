---
converter: markdown
metadata:
  title: Module Templates
  description: Detailed description of module templates with example. 
slug: tutorials/modules/templates
searchable: true
---

With **module templates**, you can configure modules before getting deployed to an environment. For example, you can specify the slug for a page (where the page will be available after the module is installed) upon installing the module.

This works both in sync and deploy mode.

## Markup

Everything between `<%=` and `=%>` is interpreted as a key to be found in the template configuration file. There is no logic supported, the only available filter is `&`, which unescapes the value provided by the user (by default they are all escaped).

## Configuration

{% include "alert/note", content: "This section is work in progress, so it is likely to keep changing - we are adding support for the template configuration file on module toplevel (separate configuration file per module)." %}

Values for variables have to be provided in the toplevel "template-values.json" file, but the location of the configuration file can be set using the `TEMPLATE_VALUES_FILE_PATH` variable.


## Example

If you have a page with this code:

``` liquid
---
slug: <%= &slug =%>
layout_name: "modules/contact_form/main"
---

<h1> <%= title =%> </h1>
```

And a toplevel `template-values.json` with:

``` json
{
  "slug": "/contact_form",
  "title": "Contact Page title"
}
```

During deploy or sync it will get filled in and sent to the server as:

```
---
slug: /contact_form
layout_name: "modules/contact_form/main"
---

<h1> Contact Page title </h1>
```
